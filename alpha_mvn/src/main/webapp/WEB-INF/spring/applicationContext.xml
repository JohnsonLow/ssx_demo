<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns:p="http://www.springframework.org/schema/p"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:tx="http://www.springframework.org/schema/tx" xmlns:context="http://www.springframework.org/schema/context"
	xmlns="http://www.springframework.org/schema/beans"  xmlns:mvc="http://www.springframework.org/schema/mvc"
	xsi:schemaLocation="
       http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
       http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.2.xsd
       http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.2.xsd
       http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-3.2.xsd
       http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.2.xsd">
	<context:annotation-config />
	<context:component-scan base-package="org.sky.ssh1.alpha" />

	<bean id="environmentVariablesConfiguration"
		class="org.jasypt.encryption.pbe.config.EnvironmentStringPBEConfig"
		p:algorithm="PBEWITHMD5ANDDES" p:passwordEnvName="APP_ENCRYPTION_PASSWORD" />

	<bean id="configurationEncryptor" class="org.jasypt.encryption.pbe.StandardPBEStringEncryptor"
		p:config-ref="environmentVariablesConfiguration" />
	<bean id="propertyConfigurer"
		class="org.jasypt.spring.properties.EncryptablePropertyPlaceholderConfigurer">
		<constructor-arg ref="configurationEncryptor" />
		<property name="locations">
			<list>
				<value>
					classpath:jdbc.properties
				</value>
			</list>
		</property>
	</bean>
	<context:property-placeholder location="classpath:jdbc.properties" />
	
	<!-- you can ignore following lines -->
	<bean id="methodLoggerAdvisor" class="com.alpha.util.LoggerAdvice">
	</bean>

	<bean id="dataSource"
		class="org.springframework.jdbc.datasource.DriverManagerDataSource">
		<property name="driverClassName" value="${jdbc.driverClassName}" />
		<property name="url" value="${jdbc.url}" />
	</bean>
	<!-- transaction manager, use JtaTransactionManager for global tx -->
	<bean id="transactionManager"
		class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />
	</bean>
	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">  
	    <property name="basePackage" value="com.workman.*.persistence" />  
	</bean>  
	<!-- enable component scanning (beware that this does not enable mapper 
		scanning!) -->

	<!-- scan for mappers and let them be autowired -->
	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<property name="basePackage" value="org.mybatis.jpetstore.persistence" />
	</bean>
	
	
	<context:annotation-config />
	<mvc:annotation-driven />
	<mvc:resources location="/static/" mapping="/static/**" />
	<context:component-scan base-package="com.alpha.*.controller" />
	<context:component-scan base-package="com.alpha.*.dao" />
	<context:component-scan base-package="com.alpha.*.persistence" />
	<bean id="springUtil" class="com.alpha.utils.SpringUtil">
	</bean>
	<aop:config>
		<aop:aspect id="originalBeanAspect" ref="methodLoggerAdvisor">
			<aop:pointcut id="loggerPointCut"
				expression="execution(* com.alpha.service.impl.*.*(..))" />
			<aop:around method="aroundAdvice" pointcut-ref="loggerPointCut" />
		</aop:aspect>
	</aop:config>
</beans>